@import "variables";

/** ********************************************************************************************************************
 * Globals
 */

/** ********************************************************************************************************************
 * Layout
 */

article#portfolio {
	@media (scripting: none) {
		// Hide section when scripts are not available to load content
		display: none;
	}

	> header {
		background-image:
			linear-gradient(
				$dark-overlay-color,
				$dark-overlay-color
			),
			url($image-portfolio);
		background-position: left top;
	}
	> .grid {
		display: flex;
		flex-flow: row wrap;
		justify-content: center;
		align-items: center;

		> .thumbnail {
			//flex: 1 1 auto;
		}
	}
}

/** ********************************************************************************************************************
 * Misc
 */

.thumbnail {
	min-width: 72px;
	max-width: 256px;
	min-height: 72px;
	max-height: 256px;
	height: calc(30vw - 2rem);
	width: calc(30vw - 2rem);
	margin: 1rem;
	cursor: pointer;
	overflow: hidden;
	// TODO: Replace inline background image through attr when supported
	//background: attr(data-thumbnail url);
	background-repeat: no-repeat;
	background-position: center;
	background-size: cover;
	position: relative;
	// define this as placeholder until thumbnail loads
	//box-shadow: 0 0 -1px -2px $dark-overlay-color;
	box-shadow: 0 0.2rem 1rem $dark-shadow-color;

	&::before {
		position: absolute;
		top: 0;
		left: 0;
		height: 100%;
		width: 100%;
		background: $light-overlay-color;
		content: ' ';
	}
	&:hover,
	&:focus {
		box-shadow: 0 0 30px $dark-shadow-hover-color;

		& img.placeholder {
			transform: scale(1.075);
		}
	}
	&:not(:hover):not(:focus) {
		& img.placeholder {
			transform: scale(1.1);
		}
	}
	&:hover::before {
		background: none;
	}
	& .picture {
		position: fixed;
		background: $light-overlay-color-2;
		z-index: 999;
		text-align: center;
		justify-content: center;
		align-items: center;

		//&:not(.show) {
		display: none;
		//}
	}
	&.show .picture {
		top: 0;
		left: 0;
		height: 100vh;
		width: 100vw;
		display: flex;

		img {
			width: auto;
			height: auto;
			max-width: 100vw;
			max-height: 100vh;

			@supports (object-fit: contain) {
				width: 100%;
				height: 100%;
				object-fit: contain;
			}
		}
	}
}

@supports (backdrop-filter: blur(20px)) {
	.thumbnail .picture {
		background: $acrylic-light-color;
		backdrop-filter: $acrylic-filter;
	}
}

.thumbnail img {
	//border: $grid solid $background-color;
	//transition: transform 0.2s ease-out;
}

.thumbnail img.placeholder {
	transition: transform 0.2s ease-out;
	width: 100%;
	height: 100%;
	object-fit: cover;
}

.thumbnail > .placeholder {
	//transition: max-height 0.5s ease-out;
	//height: 100vh;
	//max-height: 256px;
}

.thumbnail:not(.show) > .placeholder {
	//animation: tv_off 2s ease;
}

.thumbnail.show > .placeholder {
	//transition: max-height 0.5s ease-out;
	//animation: tv_on 2s ease;
	//position: fixed;
	//top: 0;
	//max-height: 100vh;
	//z-index: 1000;
}

.thumbnail .picture {
	//display: none !important;
}

@keyframes tv_on {
	10% {
		transform: scale(0.2, 0.002) translate(-50%);
		opacity: 0;
	}
	50% {
		transform: scale(1, 0.002) translate(-50%);
		opacity: 1;
	}
	100% {
		transform: scale(1, 1) translate(-50%);
	}
}

@keyframes tv_off {
	10% {
		transform: scale(1, 0.002) translate(-50%);
		position: fixed;
		top: 0;
		max-height: 100vh;
		z-index: 1000;
	}
	50% {
		transform: scale(0.2, 0.002) translate(-50%);
		opacity: 1;
		position: fixed;
		top: 0;
		max-height: 100vh;
		z-index: 1000;
	}
	100% {
		transform: scale(0.2, 0.002) translate(-50%);
		opacity: 0;
		position: fixed;
		top: 0;
		max-height: 100vh;
		z-index: 1000;
	}
}
